name: CI/CD - Three Tier Application

on:
  push:
    branches: [ "main" ]

jobs:
  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest

    env:
      FRONTEND_IMAGE: three-tier-frontend
      BACKEND_IMAGE: three-tier-backend

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Build Frontend Docker Image
      run: |
        cd Application-Code/frontend
        docker build -t $FRONTEND_IMAGE:latest .

    - name: Save Frontend Image
      run: docker save $FRONTEND_IMAGE:latest -o frontend.tar

    - name: Upload Frontend Image
      uses: actions/upload-artifact@v3
      with:
        name: frontend-image
        path: frontend.tar

    - name: Build Backend Docker Image
      run: |
        cd Application-Code/backend
        docker build -t $BACKEND_IMAGE:latest .

    - name: Save Backend Image
      run: docker save $BACKEND_IMAGE:latest -o backend.tar

    - name: Upload Backend Image
      uses: actions/upload-artifact@v3
      with:
        name: backend-image
        path: backend.tar

  push-images:
    name: Push Docker Images to ECR
    runs-on: ubuntu-latest
    needs: build-images

    env:
      AWS_REGION: us-east-2
      ECR_REGISTRY: 376885477991.dkr.ecr.us-east-2.amazonaws.com
      FRONTEND_IMAGE: three-tier-frontend
      BACKEND_IMAGE: three-tier-backend

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Download Frontend Image
      uses: actions/download-artifact@v3
      with:
        name: frontend-image
        path: .

    - name: Load Frontend Image
      run: docker load -i frontend.tar

    - name: Tag & Push Frontend
      run: |
        docker tag $FRONTEND_IMAGE:latest $ECR_REGISTRY/$FRONTEND_IMAGE:latest
        docker push $ECR_REGISTRY/$FRONTEND_IMAGE:latest

    - name: Download Backend Image
      uses: actions/download-artifact@v3
      with:
        name: backend-image
        path: .

    - name: Load Backend Image
      run: docker load -i backend.tar

    - name: Tag & Push Backend
      run: |
        docker tag $BACKEND_IMAGE:latest $ECR_REGISTRY/$BACKEND_IMAGE:latest
        docker push $ECR_REGISTRY/$BACKEND_IMAGE:latest

name: CI/CD - Three Tier Application

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    name: Build, Push Docker Images to ECR, and Deploy to EC2
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-2
      ECR_REGISTRY: 376885477991.dkr.ecr.us-east-2.amazonaws.com
      FRONTEND_IMAGE: three-tier-frontend
      BACKEND_IMAGE: three-tier-backend

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build & Push Frontend Image
      run: |
        cd Application-Code/frontend
        docker build -t $ECR_REGISTRY/$FRONTEND_IMAGE:latest .
        docker push $ECR_REGISTRY/$FRONTEND_IMAGE:latest

    - name: Build & Push Backend Image
      run: |
        cd ../../Application-Code/backend
        docker build -t $ECR_REGISTRY/$BACKEND_IMAGE:latest .
        docker push $ECR_REGISTRY/$BACKEND_IMAGE:latest

    - name: Deploy to EC2 Instance
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin $ECR_REGISTRY

          docker pull $ECR_REGISTRY/$BACKEND_IMAGE:latest
          docker pull $ECR_REGISTRY/$FRONTEND_IMAGE:latest

          docker stop backend || true && docker rm backend || true
          docker stop frontend || true && docker rm frontend || true

          docker run -d --name backend -p 5000:5000 $ECR_REGISTRY/$BACKEND_IMAGE:latest
          docker run -d --name frontend -p 80:80 $ECR_REGISTRY/$FRONTEND_IMAGE:latest

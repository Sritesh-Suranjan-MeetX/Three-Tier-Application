name: CI/CD - Three Tier Application

on:
  push:
    branches:
      - "main"

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-2
      ECR_REGISTRY: 376885477991.dkr.ecr.us-east-2.amazonaws.com
      FRONTEND_IMAGE: three-tier-frontend
      BACKEND_IMAGE: three-tier-backend

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Frontend Docker Image
      run: |
        cd Application-Code/frontend
        docker build --no-cache -t $ECR_REGISTRY/$FRONTEND_IMAGE:latest .
        docker images  # Verify that the image was built

    - name: Build Backend Docker Image
      run: |
        cd Application-Code/backend
        docker build --no-cache -t $ECR_REGISTRY/$BACKEND_IMAGE:latest .
        docker images  # Verify that the image was built

  push:
    name: Push Docker Images to ECR
    runs-on: ubuntu-latest
    needs: build  # Ensure build job is completed before push job
    env:
      AWS_REGION: us-east-2
      ECR_REGISTRY: 376885477991.dkr.ecr.us-east-2.amazonaws.com
      FRONTEND_IMAGE: three-tier-frontend
      BACKEND_IMAGE: three-tier-backend

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Push Frontend Docker Image to ECR
      run: |
        docker push $ECR_REGISTRY/$FRONTEND_IMAGE:latest

    - name: Push Backend Docker Image to ECR
      run: |
        docker push $ECR_REGISTRY/$BACKEND_IMAGE:latest

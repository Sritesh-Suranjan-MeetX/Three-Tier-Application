name: CI/CD - Three Tier Application

on:
  push:
    branches:
      - "main"

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-2
      ECR_REGISTRY: 376885477991.dkr.ecr.us-east-2.amazonaws.com
      FRONTEND_IMAGE: three-tier-frontend
      BACKEND_IMAGE: three-tier-backend

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Frontend Docker Image
      run: |
        cd Application-Code/frontend
        docker build -t $ECR_REGISTRY/$FRONTEND_IMAGE:latest .

    - name: Build Backend Docker Image
      run: |
        cd Application-Code/backend
        docker build -t $ECR_REGISTRY/$BACKEND_IMAGE:latest .

  push:
    name: Push Docker Images to ECR
    runs-on: ubuntu-latest
    needs: build # Ensure build job is completed before push job
    env:
      AWS_REGION: us-east-2
      ECR_REGISTRY: 376885477991.dkr.ecr.us-east-2.amazonaws.com
      FRONTEND_IMAGE: three-tier-frontend
      BACKEND_IMAGE: three-tier-backend

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: true
        registry-type: private
        skip-logout: false
      env:
        AWS_REGION: ${{ env.AWS_REGION }}
        ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Push Frontend Docker Image to ECR
      run: |
        docker push $ECR_REGISTRY/$FRONTEND_IMAGE:latest

    - name: Push Backend Docker Image to ECR
      run: |
        docker push $ECR_REGISTRY/$BACKEND_IMAGE:latest

  deploy:
    name: Deploy Application to EC2
    runs-on: ubuntu-latest
    needs: push # Ensure push job is completed before deploy job
    env:
      EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
      EC2_PRIVATE_KEY_PATH: ${{ secrets.EC2_PRIVATE_KEY_PATH }}

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Add EC2 instance to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H $EC2_PUBLIC_IP >> ~/.ssh/known_hosts

    - name: Deploy Frontend to EC2
      run: |
        ssh -i $EC2_PRIVATE_KEY_PATH ubuntu@$EC2_PUBLIC_IP "docker pull $ECR_REGISTRY/$FRONTEND_IMAGE:latest && docker run -d -p 80:80 $ECR_REGISTRY/$FRONTEND_IMAGE:latest"

    - name: Deploy Backend to EC2
      run: |
        ssh -i $EC2_PRIVATE_KEY_PATH ubuntu@$EC2_PUBLIC_IP "docker pull $ECR_REGISTRY/$BACKEND_IMAGE:latest && docker run -d -p 3000:3000 $ECR_REGISTRY/$BACKEND_IMAGE:latest"
